how should the algorithm work?

idea 1
	
	1.) setup geofences for every tracked wait lane
		a.) one geofence should be as close a possible to the size
			of actual boundary region.
		b.) another geofence should be a limit on how far tracking
			will be allowed for that geofence.
	2.) after the leaves the limit geofence give a minute or two for
		gps to keep recording.
		
	#CHECK: atleast one point must have fallen within boundary polygon 
	(optional)
	
	3.) for every geofence limit that was activiated throughout the
		recording run the likeliness algorithm.
		a.) for every point of the recorded path determine which is
			the closest square. this will generate a sequence of squares
			that are supposed to have been transversed.
			1.) give a score to each gps point to square based on distance.
		b.) use the scores to come up with a score for the whole bridge.
	4.) order the bridges by score from lowest to highest, then for
		each bridge try to determine a valid path.
		(hard part)
		a.) calculate forwards and backward flow analysis for each block
			of the bridge.
		b.) start with the entries, calculate a total score for each
			descendant of the entry, the entry with the lowest score, will
			be chosen as the entry.
		c.) set current block
		d.) while finished
			1.) if the current block has several immediate decendants, then 
				for each immediate descendant
				a.) calculate score for the descendants of the immediate descendant
				b.) choose the immediate descendant with the lowest score
			2.) if the current block has only one immediate descendant, then
				a.) choose this as immediate descendant
			3.) if no descendant then finished
		e.) this will be the route taken with the smallest score
	5.) choose the route taken with the smallest score for all bridges that
		were used.
	6.) if route has a score below certain threshould then choose this as the
		route that was actually taken.
	7.) calculate factores! :) (later)
	
	
Wait Lanes File System


	WaitLanes/x/info.json
	WaitLanes/x/files/model.json
	WaitLanes/x/files/boundary.json
	WaitLanes/x/files/other.json
	WaitLanes/x/data/history/DDMMYYYY-HHMMSS.MMMM.json
				